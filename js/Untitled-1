var aplayer = function(){
    this.activePlayerId = "none";
    this.scrubbing = "none";
    this.allPlayers = [];
    this.rootUrl = phpdata.pluginsUrl;
    this.images = {
        "pause":this.rootUrl+"/img/pause.png",
        "play":this.rootUrl+"/img/play.png",
    };
}
aplayer.initPlayer = function(id){
    this.allPlayers.push(id);
    var player = document.getElementById(id);
    console.log('player init: '+id);
    tTime = check_tTime(id);
    var scrub_wrap = document.getElementById(id+"-scrub-wrap");
    this.render.scrubWrap(scrub_wrap,id,tTime);
}

aplayer.scrub = {};
aplayer.scrub.start = function(id){
    console.log("Start Scrubbing");
    this.scrubbing = id;
}
aplayer.scrub.stop = function(){
    console.log("Stop Scrubbing");
    this.scrubbing = "none";
}
aplayer.scrub.set = function(id){
    var player = document.getElementById(id);
    var scrub_range = document.getElementById(id+"-scrub");
    player.currentTime = scrub_range.value;
    if(id!=this.activePlayerId){
        this.render.playerUI(id);
    }
}

aplayer.state = {};
aplayer.state.toggle = function(id){
    this.activePlayerId = id;
    var player = document.getElementById(id);
    console.log('toggling player: '+id);
    if(player.paused){
        this.state.play(id);
    }else{
        this.state.pause(id);
    }
}
aplayer.state.play = function(id){
    console.log('playing: '+id);
    var player = document.getElementById(id);
    var ppBtn = document.getElementById(id+'-pp');
    this.allPlayers.forEach(function(playerID){
        //pause other players
        this.state.pause(playerID);
    });
    if(player.paused==true){
        player.play();
        this.render.ppImg(ppBtn, this.images["pause"]);
    }
}
aplayer.state.pause = function(id){
    console.log('pausing: '+id);
    var player = document.getElementById(id);
    var ppBtn = document.getElementById(id+'-pp');
    if(player.paused==false){
        player.pause();
        this.render.ppImg(ppBtn, this.images["play"]);
    }
}
aplayer.state.stop = function(id){
    console.log('stopping: '+id);
    var player = document.getElementById(id);
    player.currentTime = 0;
    this.state.pause(id);
}

aplayer.update = {};
aplayer.update.playerUI = {}
aplayer.update.playerUI.main = function(id="none"){
    if(id=="none"){ // check if we are setting a custom id for the update
        id = this.activePlayerId;
    }
    if(id=="none"){// if we still have no ID to work with that means nothing is playing yet so we don't need to update
        return;
    }
    var cTime = this.update.cTime(id);
    var tTime = this.update.tTime(id);
    if(scrubbing!=id){
        var scrub_range = document.getElementById(id+"-scrub");
        scrub_range.value = cTime;
    }else{
        // if we are, do not try to change the scrub range value
        console.log("scrubbing");
    }
}
aplayer.update.playerUI.cTime = function(id){
    var player = document.getElementById(id);
    var cTime = player.currentTime;
    var cTime_div = document.getElementById(id+"-ctime");
    var cTimeHuman = new Date(null);
    cTimeHuman.setSeconds(cTime)
    cTimeHuman = cTimeHuman.toISOString().substr(14, 5);
    this.render.time(cTime_div, cTimeHuman);
    return cTime;
}
aplayer.update.playerUI.tTime = function(){
    var player = document.getElementById(id);
    var tTime = player.duration;
    var tTime_div = document.getElementById(id+"-ttime");
    var tTimeHuman = new Date(null);
    tTimeHuman.setSeconds(tTime)
    tTimeHuman = tTimeHuman.toISOString().substr(14, 5);
    this.render.time(tTime_div, tTimeHuman);
    return tTime;
}

aplayer.generate = {};
aplayer.generate.player = function(url,title,artist,album,playerID){
    var ret = "<div><strong>"+title+" - "+artist+"</strong></div>";
    ret += "<div style='font-size:0.8rem;'>"+album+"</div>";
    ret += "<br>";
    ret += "<audio id='"+playerID+"' preload='metadata' onloadedmetadata='aplayer.initPlayer(\""+playerID+"\");';>";//was oncanplay
    ret += "<source src='"+url+"' type='audio/mpeg'>";
    ret += "Your browser does not support the audio element.";
    ret += "</audio>";

    ret += "<button class='aplayer-btn' id='"+playerID+"-pp' onclick='aplayer.state.toggle(\""+playerID+"\")'> <img src='"+phpdata.pluginsUrl+"/img/play.png'> </button>";
    ret += "<button class='aplayer-btn id='"+playerID+"-stop' onclick='aplayer.state.stop(\""+playerID+"\")'><img src='"+phpdata.pluginsUrl+"/img/stop.png'></button>";
    
    ret += "<div style='float:right; font-size:1.5rem;'>";
    ret += "<span id='"+playerID+"-ctime'>00:00</span>";
    ret += "/<span id='"+playerID+"-ttime'>00:00</span>";
    ret += "</div>";

    ret += "<br>";
    ret += `<div id='`+playerID+`-scrub-wrap' style='width:100%;'>
<input class='aplayer-range' type='range' min='0' max='0' val='0'>
</div>`;
    aplayer.render.player(playerID,ret);
}

aplayer.render = {};
aplayer.render.scrubWrap = function(scrub_wrap,id,tTime){
    scrub_wrap.innerHTML = "<input class='aplayer-range' id='"+id+"-scrub' type='range' min='0' max='"+tTime+"' value='0' oninput=\"setCurrentTime('"+id+"')\" onmousedown=\"startScrubbing('"+id+"')\" onmouseup=\"stopScrubbing()\">";
}
aplayer.render.ppImg = function(ppBtn, curImg){
    ppBtn.innerHTML = '<img src="'+curImg+'">';
}
aplayer.render.time = function(time_div,timeHuman){
    time_div.innerHTML = timeHuman;
}
aplayer.render.player = function(playerID,html){
    var wrap = document.getElementById(playerID+"-wrap");
    wrap.innerHTML = html;
}

